import { useState, useEffect } from "react";
import axios from "axios";

export default function PresentationTool() {
  const [file, setFile] = useState(null);
  const [totalTime, setTotalTime] = useState("");
  const [session, setSession] = useState(null);
  const [sessions, setSessions] = useState([]);

  const token = localStorage.getItem("token");

  const uploadPresentation = async () => {
    if (!file || !totalTime) return alert("File & total time required");

    const formData = new FormData();
    formData.append("presentation", file);
    formData.append("totalTime", totalTime);

    try {
      const res = await axios.post("http://localhost:5000/api/presentation/upload", formData, {
        headers: { Authorization: `Bearer ${token}`, "Content-Type": "multipart/form-data" },
      });
      setSession(res.data.session);
      alert("Session created!");
      fetchSessions();
    } catch (err) {
      console.error(err);
      alert("Failed to create session");
    }
  };

  const fetchSessions = async () => {
    try {
      const res = await axios.get("http://localhost:5000/api/presentation", {
        headers: { Authorization: `Bearer ${token}` },
      });
      setSessions(res.data.sessions);
    } catch (err) {
      console.error(err);
    }
  };

  useEffect(() => {
    fetchSessions();
  }, []);

  return (
    <div className="p-8">
      <h2 className="text-2xl font-bold mb-4">üìë Presentation Tool</h2>

      <div className="mb-6">
        <input
          type="file"
          accept=".pdf,.pptx"
          onChange={(e) => setFile(e.target.files[0])}
          className="mb-2"
        />
        <input
          type="number"
          placeholder="Total Time (minutes)"
          value={totalTime}
          onChange={(e) => setTotalTime(e.target.value)}
          className="ml-2 px-2 py-1 border rounded"
        />
        <button
          onClick={uploadPresentation}
          className="ml-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
        >
          Upload & Create
        </button>
      </div>

      {session && (
        <div className="mb-8">
          <h3 className="font-semibold mb-2">‚è± Time Breakdown for {session.fileName}</h3>
          <ul className="list-disc pl-6 space-y-2">
            {session.topics.map((topic, idx) => (
              <li key={idx}>
                <div className="font-bold">
                  {topic.title} ‚Äî {Math.floor(topic.allocatedTime / 60)}m {topic.allocatedTime % 60}s
                </div>
                <div className="text-gray-600 text-sm">{topic.summary}</div>
              </li>
            ))}
          </ul>
        </div>
      )}

      <h3 className="text-xl font-bold mb-2">üìÇ Saved Sessions</h3>
      <ul className="list-disc pl-6">
        {sessions.map((s) => (
          <li key={s._id}>
            {s.fileName} ‚Äî {s.totalTime} min ‚Äî {new Date(s.createdAt).toLocaleString()}
          </li>
        ))}
      </ul>
    </div>
  );
}
